@page "/Case_Three"
@rendermode InteractiveServer
@inject ipsen5_data_hound.Services.ValuesService ValuesService
@inject NavigationManager NavigationManager


<h3>Case Three</h3>
<div class="toggle-documents1">
    <button class="btn btn-toggle" @onclick="ToggleTableVisibility1">Minimize</button>
    @if (showTable1)
    {
        @for (int i = 0; i < ValuesService.leftValues5.Count; i++)
        {
            var index = i;
            <div class="row">
                <div class="col flex-container">
                    <button class="btn btn-primary button-small" @onclick="() => ToggleLeftValue3(index)">Submit</button>
                    <p class="text-bordering-button">@ValuesService.leftValues5[index]</p>
                </div>
                <div class="col">
                    <img class="image-inline-with-text" src="@(ValuesService.leftValues5[index] ^ ValuesService.rightValues5[index] ? "images/orange_circle.jpg" : (ValuesService.leftValues5[index] && ValuesService.rightValues5[index] ? "images/green_circle.jpg" : "images/red_circle.jpg"))" alt="Result image">
                </div>
                <div class="col flex-container2">
                    <p class="text-bordering-button">@ValuesService.rightValues5[index]</p>
                    <button class="btn btn-primary button-small" @onclick="() => ToggleRightValue3(index)">Submit</button>
                </div>
            </div>
        }
    }
</div>
    <img class="done-image" src="@($"images/{ValuesService.DetermineColor(5)}_circle.jpg")" alt="Status image">
    <div class="toggle-documents2">
        <button class="btn btn-toggle" @onclick="ToggleTableVisibility2">Minimize</button>
        @if (showTable2)
        {
            @for (int i = 0; i < ValuesService.leftValues6.Count; i++)
            {
                var index = i;
                <div class="row">
                    <div class="col flex-container">
                        <button class="btn btn-primary button-small" @onclick="() => ToggleLeftValue4(index)">Submit</button>
                        <p class="text-bordering-button">@ValuesService.leftValues6[index]</p>
                    </div>
                    <div class="col">
                        <img class="image-inline-with-text" src="@(ValuesService.leftValues6[index] ^ ValuesService.rightValues6[index] ? "images/orange_circle.jpg" : (ValuesService.leftValues6[index] && ValuesService.rightValues6[index] ? "images/green_circle.jpg" : "images/red_circle.jpg"))" alt="Result image">                </div>
                    <div class="col flex-container2">
                        <p class="text-bordering-button">@ValuesService.rightValues6[index]</p>
                        <button class="btn btn-primary button-small" @onclick="() => ToggleRightValue4(index)">Submit</button>
                    </div>
                </div>
            }
        }
    </div>
   <img class="done-image" src="@($"images/{ValuesService.DetermineColor(6)}_circle.jpg")" alt="Status image">

       <div>
           <button class="btn btn-primary" @onclick="NavigateToCases">Back to cases</button>
       </div>
    
   @code {
    private bool showTable1 = true;
    private bool showTable2 = true;

    private void ToggleLeftValue3(int index)
    {
        ValuesService.ToggleLeftValue(index, 5);
    }

    private void ToggleRightValue3(int index)
    {
        ValuesService.ToggleRightValue(index, 5);
    }

    private void ToggleTableVisibility1()
    {
        showTable1 = !showTable1;
    }

    private void ToggleLeftValue4(int index)
    {
        ValuesService.ToggleLeftValue(index, 6);
    }

    private void ToggleRightValue4(int index)
    {
        ValuesService.ToggleRightValue(index, 6);
    }

    private void ToggleTableVisibility2()
    {
        showTable2 = !showTable2;
    }
    void NavigateToCases()
    {
        NavigationManager.NavigateTo("/documents");
    }
}