@page "/Case_One"
@rendermode InteractiveServer
@inject ipsen5_data_hound.Services.ValuesService ValuesService
@inject NavigationManager NavigationManager


<h3>Case one</h3>
<div class="toggle-documents1">
    <button class="btn btn-toggle" @onclick="ToggleTableVisibility1">Minimize</button>
    @if (showTable1)
    {
        @for (int i = 0; i < ValuesService.leftValues1.Count; i++)
        {
            var index = i;
            <div class="row">
                <div class="col flex-container">
                    <button class="btn btn-primary button-small" @onclick="() => ToggleLeftValue1(index)">Submit</button>
                    <p class="text-bordering-button">@ValuesService.leftValues1[index]</p>
                </div>
                <div class="col">
                    <img class="image-inline-with-text" src="@(ValuesService.leftValues1[index] ^ ValuesService.rightValues1[index] ? "images/orange_circle.jpg" : (ValuesService.leftValues1[index] && ValuesService.rightValues1[index] ? "images/green_circle.jpg" : "images/red_circle.jpg"))" alt="Result image">
                </div>
                <div class="col flex-container2">
                    <p class="text-bordering-button">@ValuesService.rightValues1[index]</p>
                    <button class="btn btn-primary button-small" @onclick="() => ToggleRightValue1(index)">Submit</button>
                </div>
            </div>
        }
    }
</div>
    <img class="done-image" src="@($"images/{ValuesService.DetermineColor(1)}_circle.jpg")" alt="Status image">
    <div class="toggle-documents2">
            <button class="btn btn-toggle" @onclick="ToggleTableVisibility2">Minimize</button>
            @if (showTable2)
            {
                @for (int i = 0; i < ValuesService.leftValues6.Count; i++)
                {
                    var index = i;
                    <div class="row">
                        <div class="col flex-container">
                            <button class="btn btn-primary button-small" @onclick="() => ToggleLeftValue2(index)">Submit</button>
                            <p class="text-bordering-button">@ValuesService.leftValues2[index]</p>
                        </div>
                        <div class="col">
                            <img class="image-inline-with-text" src="@(ValuesService.leftValues2[index] ^ ValuesService.rightValues2[index] ? "images/orange_circle.jpg" : (ValuesService.leftValues2[index] && ValuesService.rightValues2[index] ? "images/green_circle.jpg" : "images/red_circle.jpg"))" alt="Result image">                </div>
                        <div class="col flex-container2">
                            <p class="text-bordering-button">@ValuesService.rightValues2[index]</p>
                            <button class="btn btn-primary button-small" @onclick="() => ToggleRightValue2(index)">Submit</button>
                        </div>
                    </div>
                }
            }
        </div>
    <img class="done-image" src="@($"images/{ValuesService.DetermineColor(2)}_circle.jpg")" alt="Status image">
    
    <div>
        <button class="btn btn-primary" @onclick="NavigateToCases">Back to cases</button>
    </div>
@code {
    private bool showTable1 = true;
    private bool showTable2 = true;

    private void ToggleLeftValue1(int index)
    {
        ValuesService.ToggleLeftValue(index, 1);
    }

    private void ToggleRightValue1(int index)
    {
        ValuesService.ToggleRightValue(index, 1);
    }

    private void ToggleTableVisibility1()
    {
        showTable1 = !showTable1;
    }

    private void ToggleLeftValue2(int index)
    {
        ValuesService.ToggleLeftValue(index, 2);
    }

    private void ToggleRightValue2(int index)
    {
        ValuesService.ToggleRightValue(index, 2);
    }

    private void ToggleTableVisibility2()
    {
        showTable2 = !showTable2;
    }
    
    void NavigateToCases()
    {
        NavigationManager.NavigateTo("/documents");
    }
}